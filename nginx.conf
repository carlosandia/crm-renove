# ========================================
# CONFIGURAÇÃO NGINX - CRM RENOVE MULTI-TENANT
# Domínio: https://crm.renovedigital.com.br
# Stack: React 18.3.1 + Vite 6.3.5 + Node.js Express
# ========================================

# Configuração de rate limiting global
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

# Configuração de conexões concorrentes
limit_conn_zone $binary_remote_addr zone=perip:10m;

# Server block para redirecionamento HTTP → HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name crm.renovedigital.com.br;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main server block para HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name crm.renovedigital.com.br;

    # ========================================
    # SSL/TLS CONFIGURATION
    # ========================================
    
    # SSL certificates (ajuste os caminhos conforme sua configuração)
    ssl_certificate /etc/ssl/certs/crm.renovedigital.com.br.crt;
    ssl_certificate_key /etc/ssl/private/crm.renovedigital.com.br.key;
    
    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # ========================================
    # SECURITY HEADERS
    # ========================================
    
    # Security headers para Multi-tenant SaaS
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # CSP para CRM Multi-tenant (ajuste conforme necessário)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://marajvabdwkpgopytvhh.supabase.co; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://marajvabdwkpgopytvhh.supabase.co wss://marajvabdwkpgopytvhh.supabase.co; frame-ancestors 'none';" always;
    
    # ========================================
    # GENERAL SETTINGS
    # ========================================
    
    # Root directory para arquivos estáticos (build do Vite)
    root /var/www/crm/dist;
    index index.html;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Connection limiting
    limit_conn perip 10;
    
    # ========================================
    # LOGGING
    # ========================================
    
    # Logs específicos para o CRM
    access_log /var/log/nginx/crm.renovedigital.com.br.access.log;
    error_log /var/log/nginx/crm.renovedigital.com.br.error.log;
    
    # ========================================
    # STATIC ASSETS (Frontend React/Vite)
    # ========================================
    
    # Cache para assets estáticos (chunks do Vite)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        add_header Vary "Accept-Encoding";
        
        # Compressão para assets
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
            
        # Security headers para assets
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
    }
    
    # ========================================
    # API BACKEND (Node.js Express)
    # ========================================
    
    # API do backend (com rate limiting)
    location /api/ {
        # Rate limiting específico para API
        limit_req zone=api burst=20 nodelay;
        
        # Proxy para backend Node.js (porta 3001)
        proxy_pass http://127.0.0.1:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts para API
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Headers de segurança para API
        proxy_set_header X-Frame-Options DENY;
        proxy_set_header X-Content-Type-Options nosniff;
    }
    
    # Endpoint de login com rate limiting especial
    location /api/auth/login {
        limit_req zone=login burst=3 nodelay;
        
        proxy_pass http://127.0.0.1:3001/api/auth/login;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Log tentativas de login
        access_log /var/log/nginx/crm.login.access.log;
    }
    
    # Health check sem rate limiting
    location /api/health {
        proxy_pass http://127.0.0.1:3001/api/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # ========================================
    # FRONTEND SPA (React Router)
    # ========================================
    
    # Arquivos específicos do build
    location = /index.html {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # Manifest e service worker
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Todas as outras rotas → SPA (React Router)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para SPA
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # ========================================
    # SECURITY & BLOCKING
    # ========================================
    
    # Bloquear acesso a arquivos sensíveis
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear acesso a arquivos de configuração
    location ~* \.(env|log|conf|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear user agents maliciosos
    if ($http_user_agent ~* (bot|crawl|spider|scan)) {
        return 403;
    }
    
    # ========================================
    # ERROR PAGES
    # ========================================
    
    # Páginas de erro customizadas
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
    }
}

# ========================================
# CONFIGURAÇÕES GLOBAIS NGINX
# ========================================

# Rate limiting e security settings globais devem estar no nginx.conf principal:
#
# http {
#     # Gzip configuration
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_comp_level 6;
#     gzip_types
#         text/plain
#         text/css
#         text/xml
#         text/javascript
#         application/javascript
#         application/xml+rss
#         application/json
#         application/xml
#         image/svg+xml;
#
#     # Security
#     server_tokens off;
#     
#     # Multi-tenant considerations
#     map $http_host $tenant_id {
#         default "default";
#         # Adicione mapeamentos específicos se necessário
#     }
# }

# ========================================
# COMANDOS PARA ATIVAÇÃO
# ========================================
# 
# 1. Copie este arquivo para: /etc/nginx/sites-available/crm.renovedigital.com.br
# 2. Crie link simbólico: ln -s /etc/nginx/sites-available/crm.renovedigital.com.br /etc/nginx/sites-enabled/
# 3. Teste a configuração: nginx -t
# 4. Recarregue o Nginx: systemctl reload nginx
# 5. Configure SSL com Let's Encrypt: certbot --nginx -d crm.renovedigital.com.br