// Script de teste para verificar se o warning de nested scroll container foi resolvido
// Execute este script no DevTools do navegador na p√°gina do Kanban

console.log('üîç TESTE DE CORRE√á√ÉO - NESTED SCROLL CONTAINER WARNING');
console.log('='.repeat(60));

// Verificar se existem m√∫ltiplos containers com scroll
const scrollContainers = [];

// 1. Verificar container principal do Kanban
const kanbanContainer = document.querySelector('.kanban-container');
if (kanbanContainer) {
  const styles = window.getComputedStyle(kanbanContainer);
  const hasScroll = styles.overflowX !== 'visible' || styles.overflowY !== 'visible';
  scrollContainers.push({
    element: 'kanban-container (parent)',
    overflowX: styles.overflowX,
    overflowY: styles.overflowY,
    hasScroll: hasScroll
  });
}

// 2. Verificar colunas do Kanban
const columns = document.querySelectorAll('[data-rbd-droppable-id]');
columns.forEach((column, index) => {
  const styles = window.getComputedStyle(column);
  const hasScroll = styles.overflowX !== 'visible' || styles.overflowY !== 'visible';
  scrollContainers.push({
    element: `droppable-column-${index}`,
    overflowX: styles.overflowX,
    overflowY: styles.overflowY,
    hasScroll: hasScroll
  });
});

// 3. Verificar stage-content-enhanced (onde estava o problema)
const stageContents = document.querySelectorAll('.stage-content-enhanced');
stageContents.forEach((content, index) => {
  const styles = window.getComputedStyle(content);
  const hasScroll = styles.overflowX !== 'visible' || styles.overflowY !== 'visible';
  scrollContainers.push({
    element: `stage-content-enhanced-${index}`,
    overflowX: styles.overflowX,
    overflowY: styles.overflowY,
    hasScroll: hasScroll
  });
});

console.log('üìã CONTAINERS COM CONFIGURA√á√ÉO DE SCROLL:');
console.log('='.repeat(40));
scrollContainers.forEach(container => {
  console.log(`${container.element}:`);
  console.log(`  overflowX: ${container.overflowX}`);
  console.log(`  overflowY: ${container.overflowY}`);
  console.log(`  hasScroll: ${container.hasScroll ? '‚ùå SIM' : '‚úÖ N√ÉO'}`);
  console.log('');
});

// 4. Analisar hierarquia de scroll
const scrollHierarchy = scrollContainers.filter(c => c.hasScroll);
console.log('üîç HIERARQUIA DE SCROLL (PROBLEM√ÅTICA):');
console.log('='.repeat(40));
if (scrollHierarchy.length <= 1) {
  console.log('‚úÖ EXCELENTE: Apenas um ou nenhum container com scroll detectado');
  console.log('‚úÖ O warning de nested scroll container deve estar resolvido!');
} else {
  console.log('‚ùå PROBLEMA: M√∫ltiplos containers com scroll detectados:');
  scrollHierarchy.forEach(container => {
    console.log(`  - ${container.element} (${container.overflowX}/${container.overflowY})`);
  });
  console.log('‚ùå O warning de nested scroll container ainda pode aparecer');
}

// 5. Verificar se h√° warnings no console
console.log('');
console.log('üìù INSTRU√á√ïES PARA TESTE COMPLETO:');
console.log('='.repeat(40));
console.log('1. Acesse a p√°gina de Neg√≥cios/Pipeline');
console.log('2. Cole este script no Console do DevTools');
console.log('3. Execute um drag and drop de um card');
console.log('4. Observe se aparece o warning: "@hello-pangea/dndDroppable: unsupported nested scroll container detected"');
console.log('5. Se n√£o aparecer o warning, a corre√ß√£o foi bem-sucedida! ‚úÖ');

console.log('');
console.log('üîß CORRE√á√ïES IMPLEMENTADAS:');
console.log('='.repeat(40));
console.log('- ‚úÖ PipelineKanbanView: scroll √∫nico (horizontal + vertical)');
console.log('- ‚úÖ KanbanColumn: overflow visible (sem scroll pr√≥prio)');
console.log('- ‚úÖ stage-content-enhanced: overflow visible');
console.log('- ‚úÖ ignoreContainerClipping: false no Droppable');
console.log('- ‚úÖ Removida configura√ß√£o incorreta de sensors');