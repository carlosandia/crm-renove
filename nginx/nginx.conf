# CRM Marketing - Nginx Configuration para Produção Enterprise
# Configuração otimizada com SSL, cache, compressão e segurança

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configurações de performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # ================================
    # Configurações Básicas
    # ================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset
    charset utf-8;
    
    # Server tokens (segurança)
    server_tokens off;
    
    # ================================
    # Logging
    # ================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"request_time":$request_time,'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time",'
        '"upstream_response_time":"$upstream_response_time"'
    '}';
    
    access_log /var/log/nginx/access.log json;
    
    # ================================
    # Performance
    # ================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Buffers
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # ================================
    # Compressão
    # ================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;
    
    # Brotli (se disponível)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # ================================
    # SSL/TLS Configuration
    # ================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL Session
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # ================================
    # Security Headers
    # ================================
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # HSTS (apenas em HTTPS)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CSP será definido pela aplicação
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.supabase.co wss://realtime.supabase.co; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # ================================
    # Rate Limiting
    # ================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn conn_limit_per_ip 20;
    
    # ================================
    # Cache Configuration
    # ================================
    # Cache path
    proxy_cache_path /var/cache/nginx/crm levels=1:2 keys_zone=crm_cache:10m max_size=1g inactive=60m use_temp_path=off;
    
    # Cache settings
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_lock on;
    proxy_cache_revalidate on;
    
    # ================================
    # Upstream Servers
    # ================================
    upstream crm_backend {
        least_conn;
        server crm-app:3001 max_fails=3 fail_timeout=30s;
        # Adicionar mais servidores para load balancing
        # server crm-app-2:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream crm_frontend {
        least_conn;
        server crm-app:8082 max_fails=3 fail_timeout=30s;
        # server crm-app-2:8082 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # ================================
    # Server Blocks
    # ================================
    
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name app.crm-marketing.com www.app.crm-marketing.com;
        
        # Permitir acesso ao health check via HTTP
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Permitir Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirecionar todo o resto para HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name app.crm-marketing.com;
        
        # SSL Certificates
        ssl_certificate /etc/ssl/certs/crm-marketing.crt;
        ssl_certificate_key /etc/ssl/certs/crm-marketing.key;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # ================================
        # API Routes
        # ================================
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://crm_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Cache para endpoints específicos
            location ~ ^/api/(companies|pipelines|forms)$ {
                proxy_cache crm_cache;
                proxy_cache_valid 200 5m;
                add_header X-Cache-Status $upstream_cache_status;
                proxy_pass http://crm_backend;
            }
        }
        
        # ================================
        # Auth Routes (rate limited)
        # ================================
        location ~ ^/api/(auth|login|register) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://crm_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Não cachear rotas de auth
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # ================================
        # WebSocket Support
        # ================================
        location /ws {
            proxy_pass http://crm_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }
        
        # ================================
        # Static Assets
        # ================================
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Tentar servir do cache primeiro
            try_files $uri @frontend;
            
            # Compressão específica para assets
            gzip_static on;
        }
        
        # Service Worker (não cachear)
        location /sw.js {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            proxy_pass http://crm_frontend;
        }
        
        # Manifest (cache curto)
        location /manifest.json {
            expires 1d;
            add_header Cache-Control "public";
            proxy_pass http://crm_frontend;
        }
        
        # ================================
        # Frontend Routes
        # ================================
        location / {
            # Rate limiting geral
            limit_req zone=general burst=50 nodelay;
            
            # Tentar arquivo, depois diretório, depois fallback para index
            try_files $uri $uri/ @frontend;
        }
        
        # Frontend upstream
        location @frontend {
            proxy_pass http://crm_frontend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache para páginas estáticas
            proxy_cache crm_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # ================================
        # Health Check
        # ================================
        location /health {
            access_log off;
            proxy_pass http://crm_backend/api/health;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # ================================
        # Security
        # ================================
        
        # Bloquear arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear user agents maliciosos
        if ($http_user_agent ~* (bot|crawler|spider|scanner|grabber)) {
            return 403;
        }
        
        # Bloquear métodos HTTP desnecessários
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
            return 405;
        }
    }
    
    # ================================
    # Monitoring/Admin Server
    # ================================
    server {
        listen 8080;
        server_name localhost;
        
        # Status page do Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }
        
        # Métricas do Nginx para Prometheus
        location /metrics {
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
            
            # Retornar métricas básicas
            return 200 "# HELP nginx_up Nginx status\n# TYPE nginx_up gauge\nnginx_up 1\n";
            add_header Content-Type text/plain;
        }
    }
}

# ================================
# Stream Block (TCP/UDP Load Balancing)
# ================================
stream {
    # Log format para stream
    log_format basic '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time "$upstream_addr" '
                     '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';
    
    access_log /var/log/nginx/stream.log basic;
    
    # Exemplo de load balancing para banco de dados (se necessário)
    # upstream database {
    #     server db1.example.com:5432;
    #     server db2.example.com:5432;
    # }
    
    # server {
    #     listen 5432;
    #     proxy_pass database;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }
} 